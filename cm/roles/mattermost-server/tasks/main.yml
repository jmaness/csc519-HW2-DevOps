---
- name: Download and extract the Mattermost Server files
  unarchive:
    src: "{{ mattermost_archive_url }}"
    dest: /opt
    remote_src: yes
    creates: /opt/mattermost
  register: mattermost_unarchive

- name: Create the Mattermost system group
  group:
    name: "{{ mattermost_system_group }}"

- name: Create the Mattermost system user
  user:
    name: "{{ mattermost_system_user }}"
    comment: Mattermost system user
    group: "{{ mattermost_system_group }}"

- name: Create storage directory for files
  file:
    path: /opt/mattermost/data
    state: directory
    owner: "{{ mattermost_system_user }}"
    group: "{{ mattermost_system_group }}"
    recurse: true

- name: Set the user and group mattermost as the owner of Mattermost files
  file:
    path: /opt/mattermost
    state: directory
    owner: "{{ mattermost_system_user }}"
    group: "{{ mattermost_system_group }}"
    recurse: true

- name: "Give write permissions to the {{ mattermost_system_group }} group"
  file:
    path: /opt/mattermost
    state: directory
    mode: g+w
    recurse: true
  when: mattermost_unarchive.changed

- name: Install python3-distutils
  package:
    name: python3-distutils
    state: present

- name: Configure Mattermost
  mattermost_config:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict: 
    "ServiceSettings.SiteURL": "{{ mattermost_site_url }}"
    "SqlSettings.DriverName": "{{ mattermost_sqlsettings_drivername }}"
    "EmailSettings.SendEmailNotifications": "{{ mattermost_emailsettings_send_email_notifications }}"
    "EmailSettings.UseChannelInEmailNotifications": "{{ mattermost_emailsettings_use_channel_in_email_notifications }}"
    "EmailSettings.EnableSMTPAuth": "{{ mattermost_emailsettings_enable_smtp_auth }}"
    "EmailSettings.SMTPServer": "{{ mattermost_emailsettings_smtp_server }}"
    "EmailSettings.SMTPPort": "{{ mattermost_emailsettings_smtp_port }}"
    "EmailSettings.ConnectionSecurity": "{{ mattermost_emailsettings_connection_security }}"
  become_user: "{{ mattermost_system_user }}"

- name: Configure Mattermost (secure parameters)
  mattermost_config:
    key: "{{ item.key }}"
    value: "{{ item.value }}"
  with_dict:
    "SqlSettings.DataSource": "{{ mattermost_sqlsettings_datasource }}"
    "EmailSettings.SMTPUsername": "{{ mattermost_emailsettings_smtp_username }}"
    "EmailSettings.SMTPPassword": "{{ mattermost_emailsettings_smtp_password }}"
  no_log: true
  become_user: "{{ mattermost_system_user }}"

- name: Setup Mattermost to use systemd for starting and stopping
  template:
    src: mattermost.service.j2
    dest: /lib/systemd/system/mattermost.service

- name: Make systemd load the new unit
  systemd:
    daemon_reload: yes

- name: Start the service
  service:
    name: mattermost.service
    state: started
    enabled: yes
